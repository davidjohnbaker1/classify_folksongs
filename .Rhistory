yes = "allerkbbd",
no = "NA")
deut[Country.ID >= 3663 & Country.ID <= 3772]
deut[Country.ID >= 3663 & Country.ID <= 3772, .(Region = "allerkbd")]
deut[Country.ID >= 3663 & Country.ID <= 3772, (Region = "allerkbd")]
deut[Country.ID >= 3663 & Country.ID <= 3772]
deut[Country.ID >= 3663 & Country.ID <= 3772] <- deut$Region
deut[Country.ID >= 3663 & Country.ID <= 3772]
deut[Country.ID >= 3663 & Country.ID <= 3772]$Region <- "allerkbd"
deut[Country.ID >= 3663 & Country.ID <= 3772]
deut$Region <- NULL
deut
deut$Region <- "NA"
deut
deut[, .(Country.ID := as.numeric(Country.ID))]
deut[, .(Country.ID == as.numeric(Country.ID))]
deut
str(deut)
deut[, Country.ID == as.numeric(Country.ID)]
str(deut)
deut[, Country.ID := as.numeric(Country.ID)]
str(deut)
ifelse(test = deut[Country.ID >= 3663 & Country.ID <= 3772],
yes = "allerhbk",
no = deut)
ifelse(test = deut[Country.ID >= 3663 & Country.ID <= 3772],
yes = "allerhbk",
no = "NA")
ifelse(test = Country.ID >= 3663 & Country.ID <= 3772,
yes = "allerhbk",
no = "NA")
deut
ifelse(test = deut$Country.ID >= 3663 & deut$Country.ID <= 3772,
yes = "allerhbk",
no = "NA")
deut[Country.ID >= 3663 & Country.ID <= 3772]
deut[Country.ID >= 3663 & Country.ID <= 3772, Region == "allerkbd"]
deut[Country.ID >= 3663 & Country.ID <= 3772,]$Region <- "allerkbd"
deut
deut[Country.ID >= 3663  &  Country.ID <= 3772,]$Region <- "allerkbd"
deut[Country.ID >= 3773  &  Country.ID <= 4081,]$Region <- "altdeu1"
deut[Country.ID >= 4082  &  Country.ID <= 4397,]$Region <- "altdeu2"
deut[Country.ID >= 2976  &  Country.ID <= 3662,]$Region <- "ballad "
deut[Country.ID >= 2272  &  Country.ID <= 2975,]$Region <- "boehme "
deut[Country.ID >= 4398  &  Country.ID <= 4503,]$Region <- "dva"
deut[Country.ID >= 567  &  Country.ID <= 1629,]$Region <- "erk1"
deut[Country.ID >= 1630  &  Country.ID <= 2271,]$Region <- "erk2"
deut[Country.ID >= 1  &  Country.ID <= 566,]$Region <- "fink"
deut[Country.ID >= 5146  &  Country.ID <= 5157,]$Region <- "test"
deut[Country.ID >= 5120  &  Country.ID <= 5245,]$Region <- "variant"
deut[Country.ID >= 4504  &  Country.ID <= 5119,]$Region <- "zuccal"
deut
deut[, (.N), by = Region]
essenFeatures
essenFeatures$Region <- "NA"
deut <- essenFeatures[Country == "deut"]
deut[, Country.ID := as.numeric(Country.ID)]
deut[Country.ID >= 3663  &  Country.ID <= 3772,]$Region <- "allerkbd"
deut[Country.ID >= 3773  &  Country.ID <= 4081,]$Region <- "altdeu1"
deut[Country.ID >= 4082  &  Country.ID <= 4397,]$Region <- "altdeu2"
deut[Country.ID >= 2976  &  Country.ID <= 3662,]$Region <- "ballad "
deut[Country.ID >= 2272  &  Country.ID <= 2975,]$Region <- "boehme "
deut[Country.ID >= 4398  &  Country.ID <= 4503,]$Region <- "dva"
deut[Country.ID >= 567   &  Country.ID <= 1629,]$Region <- "erk1"
deut[Country.ID >= 1630  &  Country.ID <= 2271,]$Region <- "erk2"
deut[Country.ID >= 1     &  Country.ID <= 566,]$Region <-  "fink"
deut[Country.ID >= 5146  &  Country.ID <= 5157,]$Region <- "test"
deut[Country.ID >= 5120  &  Country.ID <= 5245,]$Region <- "variant"
deut[Country.ID >= 4504  &  Country.ID <= 5119,]$Region <- "zuccal"
deut[, (.N), by = Region]
essenFeatures[Country == "deut"] <- deut
essenFeatures
deut[, Country.ID := as.character(Country.ID)]
essenFeatures[Country == "deut"] <- deut
essenFeatures
essenFeatures[Country == "deut"]
essenFeatures[, (.N), by = Region]
densmoreFeatures
setnames(densmoreFeatures, "file.id","folksong")
densmoreFeatures[, Country := gsub(pattern = "[[:digit:]]",
replacement = "",
x = densmoreFeatures$folksong)]
densmoreFeatures
essenFeatures
library(data.table)
essenFeatures <- fread("data/feature_data/EssenChinaFeatures.csv")
densmoreFeatures <- fread("data/feature_data/desnmoreFeatures.csv")
essenFeatures
setnames(essenFeatures,"file.id","folksong")
essenFeatures[, Country := gsub(pattern = "[[:digit:]]",
replacement = "",
x = essenFeatures$folksong)]
essenFeatures[, Country.ID := gsub(pattern = "[[:alpha:]]",
replacement = "",
x = essenFeatures$folksong)]
essenFeatures$Region <- "NA"
deut <- essenFeatures[Country == "deut"]
deut[, Country.ID := as.numeric(Country.ID)]
deut[Country.ID >= 3663  &  Country.ID <= 3772,]$Region <- "allerkbd"
deut[Country.ID >= 3773  &  Country.ID <= 4081,]$Region <- "altdeu1"
deut[Country.ID >= 4082  &  Country.ID <= 4397,]$Region <- "altdeu2"
deut[Country.ID >= 2976  &  Country.ID <= 3662,]$Region <- "ballad "
deut[Country.ID >= 2272  &  Country.ID <= 2975,]$Region <- "boehme "
deut[Country.ID >= 4398  &  Country.ID <= 4503,]$Region <- "dva"
deut[Country.ID >= 567   &  Country.ID <= 1629,]$Region <- "erk1"
deut[Country.ID >= 1630  &  Country.ID <= 2271,]$Region <- "erk2"
deut[Country.ID >= 1     &  Country.ID <= 566,]$Region <-  "fink"
deut[Country.ID >= 5146  &  Country.ID <= 5157,]$Region <- "test"
deut[Country.ID >= 5120  &  Country.ID <= 5245,]$Region <- "variant"
deut[Country.ID >= 4504  &  Country.ID <= 5119,]$Region <- "zuccal"
deut[, (.N), by = Region]
deut[, Country.ID := as.character(Country.ID)]
essenFeatures[Country == "deut"] <- deut
essenFeatures[, (.N), by = Region]
densmoreFeatures
setnames(densmoreFeatures, "file.id","folksong")
densmoreFeatures[, Country := gsub(pattern = "[[:digit:]]",
replacement = "",
x = densmoreFeatures$folksong)]
densmoreFeatures
essenFeatures
fwrite(densmoreFeatures,"data/feature_data/densmoreFeatures.csv")
fwrite(essenFeatures, "data/feature_data/essenFeatures.csv")
library(data.table)
library(ggplot2)
densmore <- fread("data/feature_data/densmoreFeatures.csv")
essen <- fread("data/feature_data/essenFeatures.csv")
densmore
ggplot(densmore, aes(x = mean.entropy, y = mean.productivity, color = Country)) + geom_point()
ggplot(densmore, aes(x = mean.entropy, y = d.entropy, color = Country)) + geom_point()
ggplot(densmore, aes(x = mean.entropy, y = tonal.clarity, color = Country)) + geom_point()
library(psych)
pairs.panels(densmore)
densmore
names(densmore)
densmore.numeric <- densmore[, .(mean.entropy,mean.productivity,mean.Simpsons.D,mean.Yules.K,mean.Sichels.S,
mean.Honores.H,p.range,p.entropy,p.std,i.abs.range,i.abs.mean,
i.abs.std,i.mode,i.entropy,d.range,d.median,d.mode,
d.entropy,d.eq.trans,d.half.trans,d.dotted.trans,len,glob.duration,
note.dens,tonalness,tonal.clarity,tonal.spike,int.cont.grad.mean,int.cont.grad.std,
int.cont.dir.change,step.cont.glob.var,step.cont.glob.dir,step.cont.loc.var)]
densmore.numeric
get.FANTASTIC.numeric <- fucntion(x){
# Write all columns to object
y <- x[, (mean.entropy,mean.productivity,mean.Simpsons.D,mean.Yules.K,mean.Sichels.S,
mean.Honores.H,p.range,p.entropy,p.std,i.abs.range,i.abs.mean,
i.abs.std,i.mode,i.entropy,d.range,d.median,d.mode,
d.entropy,d.eq.trans,d.half.trans,d.dotted.trans,len,glob.duration,
note.dens,tonalness,tonal.clarity,tonal.spike,int.cont.grad.mean,int.cont.grad.std,
int.cont.dir.change,step.cont.glob.var,step.cont.glob.dir,step.cont.loc.var)]
paste(x,".numeric") <<- y
}
get.FANTASTIC.numeric <- fucntion(x){
# Write all columns to object
y <- x[, .(mean.entropy, mean.productivity,mean.Simpsons.D,mean.Yules.K,mean.Sichels.S,
mean.Honores.H,p.range,p.entropy,p.std,i.abs.range,i.abs.mean,
i.abs.std,i.mode,i.entropy,d.range,d.median,d.mode,
d.entropy,d.eq.trans,d.half.trans,d.dotted.trans,len,glob.duration,
note.dens,tonalness,tonal.clarity,tonal.spike,int.cont.grad.mean,int.cont.grad.std,
int.cont.dir.change,step.cont.glob.var,step.cont.glob.dir,step.cont.loc.var)]
# Write to Global Environment
paste(x,".numeric") <<- y
}
get.FANTASTIC.numeric <- fucntion(x){
# Write all columns to object
y <- x[, .(mean.entropy, mean.productivity,mean.Simpsons.D,mean.Yules.K,mean.Sichels.S,
mean.Honores.H,p.range,p.entropy,p.std,i.abs.range,i.abs.mean,
i.abs.std,i.mode,i.entropy,d.range,d.median,d.mode,
d.entropy,d.eq.trans,d.half.trans,d.dotted.trans,len,glob.duration,
note.dens,tonalness,tonal.clarity,tonal.spike,int.cont.grad.mean,int.cont.grad.std,
int.cont.dir.change,step.cont.glob.var,step.cont.glob.dir,step.cont.loc.var)]
# Write to Global Environment
paste(x,".numeric") <<- y
}
get.FANTASTIC.numeric <- fucntion(x){
# Write all columns to object
y <- x[, .(mean.entropy, mean.productivity,mean.Simpsons.D,mean.Yules.K,mean.Sichels.S,
mean.Honores.H,p.range,p.entropy,p.std,i.abs.range,i.abs.mean,
i.abs.std,i.mode,i.entropy,d.range,d.median,d.mode,
d.entropy,d.eq.trans,d.half.trans,d.dotted.trans,len,glob.duration,
note.dens,tonalness,tonal.clarity,tonal.spike,int.cont.grad.mean,int.cont.grad.std,
int.cont.dir.change,step.cont.glob.var,step.cont.glob.dir,step.cont.loc.var)]
# Write to Global Environment
assign(paste(x,".numeric", y, envir = .GlobalEnv))
}
source('~/Desktop/projects/classify_folksongs/scripts/ExploratoryAnalysis.R', echo=TRUE)
get.FANTASTIC.numeric <- fucntion(x){
# Write all columns to object
y <- x[, .(mean.entropy, mean.productivity,mean.Simpsons.D,mean.Yules.K,mean.Sichels.S,
mean.Honores.H,p.range,p.entropy,p.std,i.abs.range,i.abs.mean,
i.abs.std,i.mode,i.entropy,d.range,d.median,d.mode,
d.entropy,d.eq.trans,d.half.trans,d.dotted.trans,len,glob.duration,
note.dens,tonalness,tonal.clarity,tonal.spike,int.cont.grad.mean,int.cont.grad.std,
int.cont.dir.change,step.cont.glob.var,step.cont.glob.dir,step.cont.loc.var)]
# Write to Global Environment
assign(paste(x,".numeric", y, envir = .GlobalEnv))
}
get.FANTASTIC.numeric <- function(x){
# Write all columns to object
y <- x[, .(mean.entropy, mean.productivity,mean.Simpsons.D,mean.Yules.K,mean.Sichels.S,
mean.Honores.H,p.range,p.entropy,p.std,i.abs.range,i.abs.mean,
i.abs.std,i.mode,i.entropy,d.range,d.median,d.mode,
d.entropy,d.eq.trans,d.half.trans,d.dotted.trans,len,glob.duration,
note.dens,tonalness,tonal.clarity,tonal.spike,int.cont.grad.mean,int.cont.grad.std,
int.cont.dir.change,step.cont.glob.var,step.cont.glob.dir,step.cont.loc.var)]
# Write to Global Environment
assign(paste(x,".numeric", y, envir = .GlobalEnv))
}
get.FANTASTIC.numeric(essen)
get.FANTASTIC.numeric <- function(x){
# Write all columns to object
y <- x[, .(mean.entropy, mean.productivity,mean.Simpsons.D,mean.Yules.K,mean.Sichels.S,
mean.Honores.H,p.range,p.entropy,p.std,i.abs.range,i.abs.mean,
i.abs.std,i.mode,i.entropy,d.range,d.median,d.mode,
d.entropy,d.eq.trans,d.half.trans,d.dotted.trans,len,glob.duration,
note.dens,tonalness,tonal.clarity,tonal.spike,int.cont.grad.mean,int.cont.grad.std,
int.cont.dir.change,step.cont.glob.var,step.cont.glob.dir,step.cont.loc.var)]
# Write to Global Environment
assign(paste(x,".numeric"), y, envir = .GlobalEnv)
}
get.FANTASTIC.numeric(essen)
paste(densmore,".numeric")
get.FANTASTIC.numeric <- function(x){
# Write all columns to object
y <- x[, .(mean.entropy, mean.productivity,mean.Simpsons.D,mean.Yules.K,mean.Sichels.S,
mean.Honores.H,p.range,p.entropy,p.std,i.abs.range,i.abs.mean,
i.abs.std,i.mode,i.entropy,d.range,d.median,d.mode,
d.entropy,d.eq.trans,d.half.trans,d.dotted.trans,len,glob.duration,
note.dens,tonalness,tonal.clarity,tonal.spike,int.cont.grad.mean,int.cont.grad.std,
int.cont.dir.change,step.cont.glob.var,step.cont.glob.dir,step.cont.loc.var)]
# Write to Global Environment
assign(paste("x",".numeric"), y, envir = .GlobalEnv)
}
get.FANTASTIC.numeric(essen)
densmore <- fread("data/feature_data/densmoreFeatures.csv")
essen <- fread("data/feature_data/essenFeatures.csv")
get.FANTASTIC.numeric <- function(x){
# Write all columns to object
y <- x[, .(mean.entropy, mean.productivity,mean.Simpsons.D,mean.Yules.K,mean.Sichels.S,
mean.Honores.H,p.range,p.entropy,p.std,i.abs.range,i.abs.mean,
i.abs.std,i.mode,i.entropy,d.range,d.median,d.mode,
d.entropy,d.eq.trans,d.half.trans,d.dotted.trans,len,glob.duration,
note.dens,tonalness,tonal.clarity,tonal.spike,int.cont.grad.mean,int.cont.grad.std,
int.cont.dir.change,step.cont.glob.var,step.cont.glob.dir,step.cont.loc.var)]
# Write to Global Environment
assign(cat(paste(x,".numeric")), y, envir = .GlobalEnv)
}
get.FANTASTIC.numeric(densmore)
get.FANTASTIC.numeric <- function(x){
# Write all columns to object
y <- x[, .(mean.entropy, mean.productivity,mean.Simpsons.D,mean.Yules.K,mean.Sichels.S,
mean.Honores.H,p.range,p.entropy,p.std,i.abs.range,i.abs.mean,
i.abs.std,i.mode,i.entropy,d.range,d.median,d.mode,
d.entropy,d.eq.trans,d.half.trans,d.dotted.trans,len,glob.duration,
note.dens,tonalness,tonal.clarity,tonal.spike,int.cont.grad.mean,int.cont.grad.std,
int.cont.dir.change,step.cont.glob.var,step.cont.glob.dir,step.cont.loc.var)]
# Write to Global Environment
assign(paste(x,".numeric"), y, envir = .GlobalEnv)
}
deparse(substitute(densmore))
get.FANTASTIC.numeric <- function(x){
# Write all columns to object
y <- x[, .(mean.entropy, mean.productivity,mean.Simpsons.D,mean.Yules.K,mean.Sichels.S,
mean.Honores.H,p.range,p.entropy,p.std,i.abs.range,i.abs.mean,
i.abs.std,i.mode,i.entropy,d.range,d.median,d.mode,
d.entropy,d.eq.trans,d.half.trans,d.dotted.trans,len,glob.duration,
note.dens,tonalness,tonal.clarity,tonal.spike,int.cont.grad.mean,int.cont.grad.std,
int.cont.dir.change,step.cont.glob.var,step.cont.glob.dir,step.cont.loc.var)]
# Write to Global Environment
assign(paste(deparse(substitute(x)),".numeric"), y, envir = .GlobalEnv)
}
get.FANTASTIC.numeric(densmore)
View(`densmore .numeric`)
densmore <- fread("data/feature_data/densmoreFeatures.csv")
essen <- fread("data/feature_data/essenFeatures.csv")
get.FANTASTIC.numeric <- function(x){
# Write all columns to object
y <- x[, .(mean.entropy, mean.productivity,mean.Simpsons.D,mean.Yules.K,mean.Sichels.S,
mean.Honores.H,p.range,p.entropy,p.std,i.abs.range,i.abs.mean,
i.abs.std,i.mode,i.entropy,d.range,d.median,d.mode,
d.entropy,d.eq.trans,d.half.trans,d.dotted.trans,len,glob.duration,
note.dens,tonalness,tonal.clarity,tonal.spike,int.cont.grad.mean,int.cont.grad.std,
int.cont.dir.change,step.cont.glob.var,step.cont.glob.dir,step.cont.loc.var)]
# Write to Global Environment
assign(paste0(deparse(substitute(x)),".numeric"), y, envir = .GlobalEnv)
}
get.FANTASTIC.numeric(densmore)
get.FANTASTIC.numeric(essen)
KMO(densmore.numeric)
densmore.all.item <- fa(densmore.numeric, nfactors = ncol(densmore.numeric), rotate = "none")
plot(densmore.all.item$values)
plot(densmore.all.item$values,
main = "Eigen Values for All Item Model for Densmore Collection",
x = "Number of Factors",
y = "Eigen Values")
plot(densmore.all.item$values,
main = "Eigen Values for All Item Model for Densmore Collection",
xlab = "Number of Factors",
ylab = "Eigen Values")
plot(densmore.all.item$values,
main = "Eigen Values for All Item Model for Densmore Collection",
xlab = "Number of Factors",
ylab = "Eigen Values",
abline = 1)
abline(h = 1)
fa.parallel(densmore.numeric)
warnings()
fa.parallel(densmore.numeric)
densmore.nine.factor <- fa(densmore.numeric, nfactors = 9, rotate = "none")
densmore.nine.factor <- fa(densmore.numeric, nfactors = 7, rotate = "none")
#======================================================================================================
# Exploratory Analysis of Folk Song Datasets
#======================================================================================================
# Libraries
library(data.table)
library(ggplot2)
library(psych)
#======================================================================================================
# Get Feature Data
densmore <- fread("data/feature_data/densmoreFeatures.csv")
essen <- fread("data/feature_data/essenFeatures.csv")
#--------------------------------------------------
# Write Function for Exploring new features of desnmore that would be good for classification
ggplot(densmore, aes(x = mean.entropy, y = tonal.clarity, color = Country)) + geom_point()
#--------------------------------------------------
# Remove Categorical Varibles created by Fantastic
get.FANTASTIC.numeric <- function(x){
# Write all columns to object
y <- x[, .(mean.entropy, mean.productivity,mean.Simpsons.D,mean.Yules.K,mean.Sichels.S,
mean.Honores.H,p.range,p.entropy,p.std,i.abs.range,i.abs.mean,
i.abs.std,i.mode,i.entropy,d.range,d.median,d.mode,
d.entropy,d.eq.trans,d.half.trans,d.dotted.trans,len,glob.duration,
note.dens,tonalness,tonal.clarity,tonal.spike,int.cont.grad.mean,int.cont.grad.std,
int.cont.dir.change,step.cont.glob.var,step.cont.glob.dir,step.cont.loc.var)]
# Write to Global Environment
assign(paste0(deparse(substitute(x)),".numeric"), y, envir = .GlobalEnv)
}
get.FANTASTIC.numeric(densmore)
get.FANTASTIC.numeric(essen)
#--------------------------------------------------
# Begin the Search for collinearity
KMO(densmore.numeric)
densmore.all.item <- fa(densmore.numeric, nfactors = ncol(densmore.numeric), rotate = "none")
plot(densmore.all.item$values,
main = "Eigen Values for All Item Model for Densmore Collection",
xlab = "Number of Factors",
ylab = "Eigen Values")
fa.parallel(densmore.numeric)
# Parallel analysis says 9
densmore.nine.factor <- fa(densmore.numeric, nfactors = 7, rotate = "none")
# Error City
#--------------------------------------------------
2 +2
library(data.table)
library(twitteR)
consumer_key <- 'AgcogpDB1piKIE3PMy4k1ZcZZ'
consumer_secret <- '94PsgwnIsz3VGw7PtUWUtpsjgeeyFWEynz57ZyEjRfVODMifTS'
access_token <- '152352020-wumlA1GIj75Hzr70CcCT3aEC1RgOCU3e4htv8CdL'
access_secret <- 'a8MuiufSB2ekHpEgaZtcNjRQf38T34mcE15ubS87bAA2O'
setup_twitter_oauth(consumer_key, consumer_secret, access_token=NULL, access_secret=NULL)
twitteR::getUser(user = "dog_rates")
twitteR::searchTwitteR(from:hadleywickham)
twitteR::searchTwitteR('from:hadleywickham')
twitteR::searchTwitteR('from:dog_rates',n = 200)
twitteR::searchTwitteR('from:dog_rates',n = 500)
dog.rates <- twitteR::searchTwitteR('from:dog_rates',n = 500)
twitteR::as.data.frame(dog.rates)
twitteR::twListToDF(dog.rates)
dog.df <- twitteR::twListToDF(dog.rates)
dog.dt <- data.table(dog.df)
dog.dt
library(stringr)
dog.dt$text
str_detect(string = dog.dt$text,pattern = "/")
str_detect(string = dog.dt$text,pattern = "[0-9][0-9]/10")
rating.index <- str_detect(string = dog.dt$text,pattern = "[0-9][0-9]/10")
dog.dt[rating.index]
rated <- dog.dt[rating.index]
str_extract(string = dog.dt$text, patter = "[0-9][0-9]/10")
ratings <- str_extract(string = dog.dt$text, pattern = "[0-9][0-9]/10")
ratings
str_extract(string = dog.dt$text, pattern = "[0-9][0-9]/10")
ratings <- str_replace_all(string = rated, pattern = "/10",replacement = "" )
ratings
ratings <- str_replace_all(string = rated$text, pattern = "/10",replacement = "" )
ratings
rated
ratings
?regex
str_replace_all(string = ratings, pattern = !"[:numeric:]", replacement = "")
str_extract_all(string = ratings, pattern = "\ [0-9][0-9]")
unlist(str_extract_all(string = ratings, pattern = "\ [0-9][0-9]"))
ratings.2 <- unlist(str_extract_all(string = ratings, pattern = "\ [0-9][0-9]"))
ratings.2
as.numeric(ratings.2)
numbers <- as.numeric(ratings.2)
hist(numbers)
hist(scale(numbers))
library(ggplot2)
library(data.table)
beer <- fread("../content/post/data/beer_reviews.csv")
library(ggplot2)
library(data.table)
beer <- fread("../content/post/data/beer_reviews.csv")
beer <- fread("~/Desktop/projects/content/post/data/beer_reviews.csv")
beer <- fread("~/Desktop/projects/davidjohnbaker/content/post/data/")
beer <- fread("~/Desktop/projects/davidjohnbaker/content/post/data/")
beer <- fread('~/Desktop/projects/davidjohnbaker/content/post/data/')
beer <- fread('~/Desktop/projects/davidjohnbaker/content/post/data/beer_reviews.csv')
beer[, beer_name_unique := paste(brewery_name,beer_name, beer_style)]
names(beer)
quality.beers <- beer[, .(TimesBeerReviewed = .N), by = beer_name_unique][order(-TimesBeerReviewed)][TimesBeerReviewed >= 100]
quality.beers
top.beer.styles <- beer[, .(TimesTypeInDataTable = .N), by = beer_style][order(-TimesTypeInDataTable)][1:5]
top.100.reviewers <- beer[, .(NumberOfReviewsByReviewer = .N),
by = review_profilename][order(-NumberOfReviewsByReviewer)][NumberOfReviewsByReviewer >= 500]
reviewers <- top.100.reviewers[beer, on = "review_profilename", nomatch=0]
top.beers.good.reviewers <- top.beer.styles[reviewers, on = "beer_style", nomatch=0]
quality.data <- quality.beers[top.beers.good.reviewers, on = "beer_name_unique",nomatch=0]
quality.data
beer.null <- lmer(review_overall ~ beer_style +
(1 + review_overall|review_profilename) + (1 + review_overall|beer_name_unique),
data=quality.data, REML=FALSE)
library(lme4)
beer.null <- lmer(review_overall ~ beer_style +
(1 + review_overall|review_profilename) + (1 + review_overall|beer_name_unique),
data=quality.data, REML=FALSE)
quality.beers
quality.beers <- beer[, .(TimesBeerReviewed = .N), by = beer_name_unique][order(-TimesBeerReviewed)][TimesBeerReviewed >= 1000]
quality.beers
quality.beers <- beer[, .(TimesBeerReviewed = .N), by = beer_name_unique][order(-TimesBeerReviewed)][TimesBeerReviewed >= 2000]
quality.beers
top.beer.styles <- beer[, .(TimesTypeInDataTable = .N), by = beer_style][order(-TimesTypeInDataTable)][1:5]
top.100.reviewers
top.100.reviewers <- beer[, .(NumberOfReviewsByReviewer = .N),
by = review_profilename][order(-NumberOfReviewsByReviewer)][NumberOfReviewsByReviewer >= 1000]
top.100.reviewers
reviewers <- top.100.reviewers[beer, on = "review_profilename", nomatch=0]
top.beers.good.reviewers <- top.beer.styles[reviewers, on = "beer_style", nomatch=0]
quality.data <- quality.beers[top.beers.good.reviewers, on = "beer_name_unique",nomatch=0]
quality.data
beer.null <- lmer(review_overall ~ beer_style +
(1 + review_overall|review_profilename) + (1 + review_overall|beer_name_unique),
data=quality.data, REML=FALSE)
summary(beer.null)
beer.ar.ap.pa.ta <- lmer(review_overall ~ review_aroma + review_appearance + review_palate + review_taste +beer_style +
(1 + review_overall|review_profilename) + (1 + review_overall|beer_name_unique),
data=quality.data, REML=FALSE)
beer.ar <- lmer(review_overall ~ review_aroma + beer_style +
(1 + review_overall|review_profilename) + (1 + review_overall|beer_name_unique),
data=quality.data, REML=FALSE)
beer.ar.ap <- lmer(review_overall ~ review_aroma + review_appearance + beer_style +
(1 + review_overall|review_profilename) + (1 + review_overall|beer_name_unique),
data=quality.data, REML=FALSE)
beer.ar.ap.pa <- lmer(review_overall ~ review_aroma + review_appearance + review_palate + beer_style +
(1 + review_overall|review_profilename) + (1 + review_overall|beer_name_unique),
data=quality.data, REML=FALSE)
beer.ar.ap.pa.ta <- lmer(review_overall ~ review_aroma + review_appearance + review_palate + review_taste +beer_style +
(1 + review_overall|review_profilename) + (1 + review_overall|beer_name_unique),
data=quality.data, REML=FALSE)
anova(beer.null, beer.ar, beer.ar.ap, beer.ar.ap.pa, beer.ar.ap.pa.ta)
summary(beer.ar.ap.pa.ta)
anova(beer.null, beer.ar, beer.ar.ap, beer.ar.ap.pa, beer.ar.ap.pa.ta)
summary(beer.ar.ap.pa.ta, scientific = FALSE)
summary(beer.ar.ap.pa.ta)
library(ggplot2)
library(data.table)
beer <- fread('~/Desktop/projects/davidjohnbaker/content/post/data/beer_reviews.csv')
beer
beer[, .(MeanRating = mean(overall_review)), by = beer_style]
beer[, .(MeanRating = mean(review_overall)), by = beer_style]
beer[, .(MeanReviewOverall = mean(review_overall)), by = beer_style]
names(beer)
beer[, .(MeanReviewOverall = mean(review_overall),
MeanReviewTaste = mean(review_taste),
MeanReviewPalate = mean(review_palate),
MeanReviewAroma = mean(review_aroma),
MeanReviewAppearance = mean(review_appearance), by = beer_style]
beer[, .(MeanReviewOverall = mean(review_overall),
MeanReviewTaste = mean(review_taste),
MeanReviewPalate = mean(review_palate),
MeanReviewAroma = mean(review_aroma),
MeanReviewAppearance = mean(review_appearance)), by = beer_style]
beer.avg <-beer[, .(MeanReviewOverall = mean(review_overall),
MeanReviewTaste = mean(review_taste),
MeanReviewPalate = mean(review_palate),
MeanReviewAroma = mean(review_aroma),
MeanReviewAppearance = mean(review_appearance)), by = beer_style]
cor(MeanReviewOverall, MeanReviewTaste, data = beer.avg)
cor(beer.avg$MeanReviewOverall, beer.avg$MeanReviewTaste)
cor(beer.avg$MeanReviewOverall, beer.avg$MeanReviewPalate)
plot(beer$review_taste, beer$review_overall)
library(tree)
install.packages("tree")
library(tree)
library(MASS)
set.seed(1)
train <- sample(1:nrow(Beer),nrow(Beer)/2)
train <- sample(1:nrow(beer),nrow(beer)/2)
train
nrow(train)
length(train)
793307 *2
tree.beer <- tree(review_overall ~ review_aroma + review_appearance + review_palate + review_taste,
beer,
subset = train )
summary(tree.beer)
plot(tree.beer)
text(tree.beer , pretty = 0)
cv.beer <- cv.tree(tree.beer)
plot(cv.beer$size, cv.beer$dev, type=’b’)
plot(cv.beer$size, cv.beer$dev, type='b')
